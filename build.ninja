include libs.ninja

# Variables

## physics flags are hard coded
## Release Flags
OptimizationFlags = /DNDEBUG /O2 /Zi /fp:fast /Gm- /Gy /Gw /arch:AVX2

## Fast Debug
#OptimizationFlags = /UNDEBUG /DEBUG:full /Zi /Gm- /Gy /Gw /O2 /fp:fast /arch:AVX2

## Debug
OptimizationFlags = /UNDEBUG /DEBUG:full /Zi /Gm- /Gy /Gw /Od /fp:fast /arch:AVX2

## Hot Debug
#OptimizationFlags = /UNDEBUG /DEBUG:full /Zi /Gm- /Gy /Gw /Od /fp:fast /arch:AVX2

## Sanatized
#OptimizationFlags = /UNDEBUG /DEBUG:full /Zi /Gm- /Gy /Gw /Od /fp:fast /arch:AVX2 /fsanitize=address

cflags = -FC -WX -W4 -wd4127 -wd4100 -wd4201 -wd4505 -wd4702 -wd4701 -wd4189 -MD -EHa /std:c++20
lflags = -incremental:no -opt:noref user32.lib gdi32.lib shell32.lib /nologo /NOIMPLIB /NOEXP /FUNCTIONPADMIN /OPT:NOICF
sdl_lflags = SDL2.lib SDL2_mixer.lib SDL2main.lib

FMODInclude=/I $FMOD_SDK\api\core\inc /I $FMOD_SDK\api\studio\inc 
FMODLink=/LIBPATH:$FMOD_SDK\api\core\lib\x64 fmod_vc.lib /LIBPATH:$FMOD_SDK\api\studio\lib\x64 fmodstudio_vc.lib

WWiseInclude=/I $WWISE_SDK\include
WWiseLink=/LIBPATH:$WWISE_SDK\x64_vc170\Release\lib\ AkSoundEngine.lib AkMemoryMgr.lib

PhysXInclude=/I $PhysXSDK\include
PhysXCompiler=$PhysXSDK\bin\win.x86_64.vc143.md
# use physx checked or debug for development
PhysXOpt=release
PhysXLinkLibs=PhysX_64.lib PhysXCommon_64.lib PhysXCooking_64.lib PhysXFoundation_64.lib PhysXExtensions_static_64.lib PhysXCharacterKinematic_static_64.lib PhysXPvdSDK_static_64.lib PhysXVehicle_static_64.lib

msvc_deps_prefix = Note: including file:

glslc_iflags = -Ires/shaders/utl -Ires/shaders/rt
glslc_oflags = -Werror --target-env=vulkan1.3 --target-spv=spv1.6 -O

# Rules
rule compile_cpp
    deps = msvc
    command = cl /FS /showIncludes $opt_flags $include_flags $cflags /c $in /Fo$out
    description = Compiling $in

rule link_dll
    deps = msvc
    command = cl /showIncludes $opt_flags $in -LD /link $link_flags /OUT:$out
    description = Linking DLL $out

rule link_exe
    deps = msvc
    command = link $in $link_flags /OUT:$out
    description = Linking $out

rule copy_dll
  command = xcopy $in $out /yq
  description = Copying $in

rule compile_shader
  command = glslc $glslc_oflags $glslc_iflags $in -o $out

rule start_build_profile
  command = vcperf /start FullBuild

rule end_build_profile 
  command = vcperf /stop FullBuild /timetrace trace.json

# Build targets

build build\ztd_platform.obj: compile_cpp src\ztd_platform.cpp
  outputs = $out
  opt_flags = $OptimizationFlags -DZTD_INTERNAL=1
  include_flags = /I include /I include\vendor /I include\vendor\SDL /I $VULKAN_SDK\include /I Z:/imgui /I Z:/imgui/backends
  link_flags = $lflags /LIBPATH:$VULKAN_SDK\lib /LIBPATH:lib\debug vulkan-1.lib $sdl_lflags glfw3.lib
  random = $out.rnd

build build\ztd_physics.obj: compile_cpp src\ztd_physics.cpp
  outputs = $out
  opt_flags = /DNDEBUG /O2 /fp:fast /arch:AVX2 -DZYY_LINK_PHYSICS_API_PHYSX=1 -DZTD_INTERNAL=1
  include_flags = /I include /I include\vendor $PhysXInclude
  link_flags = $lflags /LIBPATH:$PhysXCompiler\$PhysXOpt $PhysXLinkLibs
  
build build\vendor_build.obj: compile_cpp src\vendor\vendor_build.cpp
  outputs = $out
  opt_flags = $OptimizationFlags
  include_flags = /I src\vendor /I include\vendor\Detour /I include\vendor\Recast /I Z:/imgui /I Z:/imgui/backends /I $VULKAN_SDK\include /I include/vendor
  link_flags = $lflags /LIBPATH:lib\debug glfw3.lib

build build\cultist.obj: compile_cpp src\cultist.cpp
  outputs = $out
  opt_flags = $OptimizationFlags -DZTD_INTERNAL=1
  include_flags = /I include /I include\vendor /I $VULKAN_SDK\include $FMODInclude /I Z://luau/VM/include/ /I Z://luau/Compiler/include/ /I Z:/imgui /I Z:/imgui/backends
  link_flags = $lflags 
  
build build\cultist.dll: link_dll build\cultist.obj build\vendor_build.obj
  outputs = $out
  opt_flags = $OptimizationFlags -DZTD_INTERNAL=1
  link_flags = $lflags /LIBPATH:$VULKAN_SDK\lib /LIBPATH:lib\debug vulkan-1.lib $FMODLink /LIBPATH:Z://luau/cmake/RelWithDebInfo/ Luau.Compiler.lib Luau.VM.lib Luau.CodeGen.lib Luau.Ast.lib
  random = $out.rnd

build build\ztd_physics.dll: link_dll build\ztd_physics.obj
  outputs = $out
  opt_flags = /DNDEBUG /O2 /fp:fast /arch:AVX2 -DZYY_LINK_PHYSICS_API_PHYSX=1 -DZTD_INTERNAL=1
  link_flags = $lflags /LIBPATH:lib\debug /LIBPATH:$PhysXCompiler/$PhysXOpt $PhysXLinkLibs
  random = $out.rnd

build build\game.exe: link_exe build\ztd_platform.obj
  outputs = $out
  link_flags = $lflags /LIBPATH:$VULKAN_SDK\lib /LIBPATH:lib\debug vulkan-1.lib $sdl_lflags glfw3.lib  

build build\tests.obj: compile_cpp tests\tests.cpp
    outputs = $out
    opt_flags = $OptimizationFlags -DZTD_INTERNAL=0
    include_flags = /I include /I include\vendor
    link_flags = $lflags /LIBPATH:lib\debug $sdl_lflags

build build\tests.exe: link_exe build\tests.obj
    outputs = $out
    link_flags = $lflags /LIBPATH:lib\debug $sdl_lflags
  
build build\imgui.obj: compile_cpp src\vendor\imgui\imgui_lib.cpp
    outputs = $out
    


default build\game.exe 
#default build\tests.exe
default build\cultist.dll 
default build\ztd_physics.dll

build res\shaders\bin\closesthit.rchit.spv: compile_shader res/shaders/closesthit.rchit
build res\shaders\bin\probe_raygen.rgen.spv: compile_shader res/shaders/probe_raygen.rgen
#build res\shaders\bin\raygen.rgen.spv: compile_shader res/shaders/raygen.rgen
build res\shaders\bin\anyhit.rahit.spv: compile_shader res/shaders/anyhit.rahit
build res\shaders\bin\miss.rmiss.spv: compile_shader res/shaders/miss.rmiss
build res\shaders\bin\shadow.rmiss.spv: compile_shader res/shaders/shadow.rmiss

build res\shaders\bin\probe_integrate.comp.spv: compile_shader res/shaders/probe_integrate.comp
build res\shaders\bin\probe_integrate_depth.comp.spv: compile_shader res/shaders/probe_integrate_depth.comp
build res\shaders\bin\rt_compute.comp.spv: compile_shader res/shaders/rt_compute.comp

build res\shaders\bin\screen.vert.spv: compile_shader res/shaders/screen.vert

build res\shaders\bin\invert.frag.spv: compile_shader res/shaders/invert.frag
build res\shaders\bin\downsample.frag.spv: compile_shader res/shaders/downsample.frag
build res\shaders\bin\upscale.frag.spv: compile_shader res/shaders/upscale.frag
build res\shaders\bin\tonemap.frag.spv: compile_shader res/shaders/tonemap.frag
build res\shaders\bin\skeletal.vert.spv: compile_shader res/shaders/skeletal.vert
build res\shaders\bin\simple.vert.spv: compile_shader res/shaders/simple.vert
build res\shaders\bin\simple.frag.spv: compile_shader res/shaders/simple.frag

build res\shaders\bin\skybox.vert.spv: compile_shader res/shaders/skybox.vert
build res\shaders\bin\skybox.frag.spv: compile_shader res/shaders/skybox.frag
build res\shaders\bin\voidsky.frag.spv: compile_shader res/shaders/voidsky.frag

build res\shaders\bin\gui.vert.spv: compile_shader res/shaders/gui.vert
build res\shaders\bin\gui.frag.spv: compile_shader res/shaders/gui.frag

build res\shaders\bin\trail.vert.spv: compile_shader res/shaders/trail.vert
build res\shaders\bin\trail.frag.spv: compile_shader res/shaders/trail.frag

default res/shaders/bin/closesthit.rchit.spv
default res/shaders/bin/probe_raygen.rgen.spv
#default res/shaders/bin/raygen.rgen.spv
default res/shaders/bin/anyhit.rahit.spv
default res/shaders/bin/miss.rmiss.spv
default res/shaders/bin/shadow.rmiss.spv

default res/shaders/bin/probe_integrate_depth.comp.spv
default res/shaders/bin/probe_integrate.comp.spv
#default res/shaders/bin/rt_compute.comp.spv
default res/shaders/bin/screen.vert.spv
default res/shaders/bin/invert.frag.spv
default res/shaders/bin/downsample.frag.spv
default res/shaders/bin/upscale.frag.spv
default res/shaders/bin/tonemap.frag.spv
#default res/shaders/bin/skeletal.vert.spv
default res/shaders/bin/simple.vert.spv
default res/shaders/bin/simple.frag.spv
default res/shaders/bin/skybox.vert.spv
default res/shaders/bin/skybox.frag.spv
default res/shaders/bin/voidsky.frag.spv
default res/shaders/bin/gui.vert.spv
default res/shaders/bin/gui.frag.spv
#default res/shaders/bin/trail.vert.spv
#default res/shaders/bin/trail.frag.spv
